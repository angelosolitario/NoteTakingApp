{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNotes, addNote, deleteNote, updateNote, setId, setNewNote, setActionType } from \"../redux/actions/notesActions\";\nimport { setIsLoggedIn } from \"../redux/actions/usersActions\";\nimport Axios from \"axios\";\n\nconst Note = ({\n  isLoggedIn,\n  dispatch,\n  username,\n  notes,\n  newNote,\n  actionType,\n  _id\n}) => {\n  React.useEffect(() => {\n    Axios.get('/notes/').then(res => {\n      console.log(res);\n    });\n  }, []);\n  React.useEffect(() => {\n    dispatch(getNotes());\n  }, [dispatch]);\n\n  const handleOnClick = () => {\n    if (actionType === \"Edit\") {\n      return dispatch(updateNote());\n    }\n\n    return dispatch(addNote(username, newNote));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, !isLoggedIn && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"You need access to view all notes or add a note. Please log in or Sign up\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Make a new note!\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: _id,\n    placeholder: \"enter id here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: e => dispatch(setNewNote(e.target.value)),\n    name: \"description\",\n    placeholder: \"enter new note here\",\n    value: newNote,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleOnClick,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, actionType, \" Note\")), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"id\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"User\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Actions\")), notes.map(note => React.createElement(\"tr\", {\n    key: note._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    width: \"35%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, note._id), React.createElement(\"td\", {\n    width: \"50%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, note.description), React.createElement(\"td\", {\n    width: \"10%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    width: \"5%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(setActionType(\"Edit\"));\n      dispatch(setId(note._id));\n      dispatch(setNewNote(note.description));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(setId(note._id));\n      dispatch(deleteNote(note._id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Delete\"))))));\n};\n\nconst mapStatetoProps = state => ({\n  username: state.userReducer.username,\n  notes: state.notesReducer.notes,\n  actionType: state.notesReducer.actionType,\n  _id: state.notesReducer._id,\n  newNote: state.notesReducer.newNote,\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(mapStatetoProps)(Note);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js"],"names":["React","connect","getNotes","addNote","deleteNote","updateNote","setId","setNewNote","setActionType","setIsLoggedIn","Axios","Note","isLoggedIn","dispatch","username","notes","newNote","actionType","_id","useEffect","get","then","res","console","log","handleOnClick","e","target","value","map","note","description","mapStatetoProps","state","userReducer","notesReducer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getNotes,\n    addNote,\n    deleteNote,\n    updateNote,\n    setId,\n    setNewNote,\n    setActionType\n} from \"../redux/actions/notesActions\";\nimport { setIsLoggedIn } from \"../redux/actions/usersActions\";\nimport Axios from \"axios\";\n\nconst Note = ({ isLoggedIn,dispatch,username, notes, newNote, actionType, _id }) => {\n    React.useEffect(()=>{\n        Axios.get('/notes/').then(res=>{\n            console.log(res)\n        })\n    },[])\n    React.useEffect(() => {\n        dispatch(getNotes());\n    }, [dispatch]);\n\n    const handleOnClick = () => {\n        if (actionType === \"Edit\") {\n            return dispatch(updateNote());\n        }\n        return dispatch(addNote(username,newNote))\n    };\n\n    return (\n        <div>\n            {!isLoggedIn && <><p>You need access to view all notes or add a note. Please log in or Sign up</p></>}\n            <div>\n                <h1>Make a new note!</h1>\n                <input\n                    type=\"text\"\n                    value={_id}\n                    placeholder=\"enter id here\"\n                ></input>\n                <input\n                    onChange={e => dispatch(setNewNote(e.target.value))}\n                    name=\"description\"\n                    placeholder=\"enter new note here\"\n                    value={newNote}\n                    type=\"text\"\n                ></input>\n\n                <button\n                    onClick={handleOnClick}\n                    type=\"button\"\n                >\n                    {actionType} Note\n                </button>\n            </div>\n            <table>\n                <tr>\n                    <th>id</th>\n                    <th>Description</th>\n                    <th>User</th>\n                    <th>Actions</th>\n                </tr>\n                {notes.map(note => (\n                    <tr key={note._id}>\n                        <td width=\"35%\">{note._id}</td>\n                        <td width=\"50%\">{note.description}</td>\n                        <td width=\"10%\"></td>\n                        <td width=\"5%\">\n                            <button\n                                onClick={() => {\n                                    dispatch(setActionType(\"Edit\"));\n                                    dispatch(setId(note._id));\n                                    dispatch(setNewNote(note.description));\n                                }}\n                            >\n                                Edit\n                            </button>\n                            <button\n                                onClick={() => {\n                                    dispatch(setId(note._id));\n                                    dispatch(deleteNote(note._id));\n                                }}\n                            >\n                                Delete\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n            </table>\n        </div>\n    );\n};\n\nconst mapStatetoProps = state => ({\n    username:state.userReducer.username,\n    notes: state.notesReducer.notes,\n    actionType: state.notesReducer.actionType,\n    _id: state.notesReducer._id,\n    newNote: state.notesReducer.newNote,\n    isLoggedIn: state.userReducer.isLoggedIn,\n});\n\nexport default connect(mapStatetoProps)(Note);\n"]},"metadata":{},"sourceType":"module"}