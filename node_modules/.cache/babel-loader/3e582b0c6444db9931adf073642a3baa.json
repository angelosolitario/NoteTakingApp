{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNotes, addNote, deleteNote, updateNote, setId, setNewNote, setActionType } from \"../redux/actions/notesActions\";\n\nconst Note = ({\n  isLoggedIn,\n  dispatch,\n  username,\n  notes,\n  newNote,\n  actionType,\n  _id\n}) => {\n  React.useEffect(() => {\n    dispatch(getNotes());\n  }, [dispatch]);\n\n  const handleOnClick = () => {\n    if (actionType === \"Edit\") {\n      return dispatch(updateNote());\n    }\n\n    return dispatch(addNote(username, newNote));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, !isLoggedIn && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"You need access to view all notes or add a note. Please log in or Sign up\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Make a new note!\"), React.createElement(\"input\", {\n    onChange: e => dispatch(setId(e.target.value)),\n    type: \"text\",\n    value: _id,\n    placeholder: \"enter id here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: e => dispatch(setNewNote(e.target.value)),\n    name: \"description\",\n    placeholder: \"enter new note here\",\n    value: newNote,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleOnClick,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, actionType, \" Note\")), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"id\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"User\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Actions\")), notes.map(note => React.createElement(\"tr\", {\n    key: note._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    width: \"35%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, note._id), React.createElement(\"td\", {\n    width: \"50%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, note.description), React.createElement(\"td\", {\n    width: \"10%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    width: \"5%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(setActionType(\"Edit\"));\n      dispatch(setId(note._id));\n      dispatch(setNewNote(note.description));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(setId(note._id));\n      dispatch(deleteNote(note._id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Delete\")))))));\n};\n\nconst mapStatetoProps = state => ({\n  username: state.userReducer.username,\n  notes: state.notesReducer.notes,\n  actionType: state.notesReducer.actionType,\n  _id: state.notesReducer._id,\n  newNote: state.notesReducer.newNote,\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(mapStatetoProps)(Note);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js"],"names":["React","connect","getNotes","addNote","deleteNote","updateNote","setId","setNewNote","setActionType","Note","isLoggedIn","dispatch","username","notes","newNote","actionType","_id","useEffect","handleOnClick","e","target","value","map","note","description","mapStatetoProps","state","userReducer","notesReducer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getNotes,\n    addNote,\n    deleteNote,\n    updateNote,\n    setId,\n    setNewNote,\n    setActionType\n} from \"../redux/actions/notesActions\";\n\nconst Note = ({\n    isLoggedIn,\n    dispatch,\n    username,\n    notes,\n    newNote,\n    actionType,\n    _id\n}) => {\n    React.useEffect(() => {\n        dispatch(getNotes());\n    }, [dispatch]);\n\n    const handleOnClick = () => {\n        if (actionType === \"Edit\") {\n            return dispatch(updateNote());\n        }\n        return dispatch(addNote(username, newNote));\n    };\n\n    return (\n        <div>\n            {!isLoggedIn && (\n                <>\n                    <p>\n                        You need access to view all notes or add a note. Please\n                        log in or Sign up\n                    </p>\n                </>\n            )}\n            <div>\n                <h1>Make a new note!</h1>\n                <input\n                    onChange={e => dispatch(setId(e.target.value))}\n                    type=\"text\"\n                    value={_id}\n                    placeholder=\"enter id here\"\n                ></input>\n                <input\n                    onChange={e => dispatch(setNewNote(e.target.value))}\n                    name=\"description\"\n                    placeholder=\"enter new note here\"\n                    value={newNote}\n                    type=\"text\"\n                ></input>\n\n                <button onClick={handleOnClick} type=\"button\">\n                    {actionType} Note\n                </button>\n            </div>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>id</th>\n                        <th>Description</th>\n                        <th>User</th>\n                        <th>Actions</th>\n                    </tr>\n                    {notes.map(note => (\n                        <tr key={note._id}>\n                            <td width=\"35%\">{note._id}</td>\n                            <td width=\"50%\">{note.description}</td>\n                            <td width=\"10%\"></td>\n                            <td width=\"5%\">\n                                <button\n                                    onClick={() => {\n                                        dispatch(setActionType(\"Edit\"));\n                                        dispatch(setId(note._id));\n                                        dispatch(setNewNote(note.description));\n                                    }}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    onClick={() => {\n                                        dispatch(setId(note._id));\n                                        dispatch(deleteNote(note._id));\n                                    }}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst mapStatetoProps = state => ({\n    username: state.userReducer.username,\n    notes: state.notesReducer.notes,\n    actionType: state.notesReducer.actionType,\n    _id: state.notesReducer._id,\n    newNote: state.notesReducer.newNote,\n    isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(mapStatetoProps)(Note);\n"]},"metadata":{},"sourceType":"module"}