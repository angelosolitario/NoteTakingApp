{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNotes, addNote, setNewNote } from \"../redux/actions/notesActions\";\n\nconst Note = ({\n  dispatch,\n  notes,\n  newNote\n}) => {\n  React.useEffect(() => {\n    dispatch(getNotes({}));\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Make a new note!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    onChange: e => dispatch(setNewNote(e.target.value)),\n    name: \"description\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => dispatch(addNote(newNote)),\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"ADD\")), notes.map((note, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, note.description))));\n};\n\nconst mapStatetoProps = state => ({\n  notes: state.notesReducer.notes,\n  newNote: state.notesReducer.newNote\n});\n\nexport default connect(mapStatetoProps)(Note);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js"],"names":["React","useState","connect","getNotes","addNote","setNewNote","Note","dispatch","notes","newNote","useEffect","e","target","value","map","note","i","description","mapStatetoProps","state","notesReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EACWC,OADX,EACoBC,UADpB,QAEO,+BAFP;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAE9CT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBH,IAAAA,QAAQ,CAACJ,QAAQ,CAAC,EAAD,CAAT,CAAR;AACD,GAFD,EAEG,EAFH;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAO,IAAA,QAAQ,EAAGQ,CAAD,IAAKJ,QAAQ,CAACF,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CAA9B;AAA4D,IAAA,IAAI,EAAC,aAAjE;AAA+E,IAAA,IAAI,EAAC,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AAAQ,IAAA,OAAO,EAAI,MAAIN,QAAQ,CAACH,OAAO,CAACK,OAAD,CAAR,CAA/B;AAAmD,IAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CADF,EAWGD,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,WAAT,CADF,CADD,CAXH,CADF;AAmBD,CAzBD;;AA2BA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACC,YAAN,CAAmBZ,KADM;AAEhCC,EAAAA,OAAO,EAAEU,KAAK,CAACC,YAAN,CAAmBX;AAFI,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,IAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getNotes,addNote, setNewNote\n} from \"../redux/actions/notesActions\";\n\nconst Note = ({ dispatch, notes, newNote  }) => {\n\n  React.useEffect(() => {\n    dispatch(getNotes({}));\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h1>Make a new note!</h1>\n        <p>Description</p>\n        <input onChange={(e)=>dispatch(setNewNote(e.target.value))} name=\"description\" type=\"text\"></input>\n\n        <button onClick = {()=>dispatch(addNote(newNote))} type=\"button\">\n          ADD\n        </button>\n      </div>\n\n      {notes.map((note, i) => (\n        <div key={i}>\n          <p>{note.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStatetoProps = state => ({\n  notes: state.notesReducer.notes,\n  newNote: state.notesReducer.newNote,\n});\nexport default connect(mapStatetoProps)(Note);\n"]},"metadata":{},"sourceType":"module"}