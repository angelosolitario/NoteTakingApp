{"ast":null,"code":"import axios from \"axios\";\nconst proxyUrl = \"http://localhost:3004\";\nexport const getNotes = () => (dispatch, getState) => {\n  axios.get(\"\".concat(proxyUrl, \"/allNotes\")).then(res => {\n    dispatch(setListNotes(res.data));\n  }).then(console.log);\n};\nexport const addNote = newNote => (dispatch, getState) => {\n  const newNote = getState().notesReducer.newNote;\n  axios.get(\"\".concat(proxyUrl, \"/addNote?newNote=\").concat(newNote)).then(res => {\n    dispatch({\n      type: \"ADD_NOTE\",\n      newNote: res.data\n    });\n    dispatch(setNewNote(\"\"));\n    dispatch(setListNotes());\n    dispatch(getNotes());\n  }).then(console.log);\n};\nexport const deleteNote = newNote => (dispatch, getState) => {\n  axios.get(\"\".concat(proxyUrl, \"/deleteNote\")).then(dispatch(getNotes())).then(console.log);\n};\nexport const setListNotes = notes => ({\n  type: \"SET_LIST_NOTES\",\n  notes\n});\nexport const setId = _id => ({\n  type: \"SET_ID\",\n  _id\n});\nexport const setNewNote = newNote => ({\n  type: \"SET_NEW_NOTE\",\n  newNote\n});\nexport const updateNote = () => (dispatch, getState) => {\n  const _getState$notesReduce = getState().notesReducer,\n        _id = _getState$notesReduce._id,\n        newNote = _getState$notesReduce.newNote;\n  axios.get(\"/update?_id=\".concat(_id, \"&notes=\").concat(newNote)).then(() => {\n    dispatch(setNewNote(\"\"));\n    dispatch(setId(\"\"));\n    dispatch(getNotes());\n  }).catch(console.log);\n};","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/redux/actions/notesActions.js"],"names":["axios","proxyUrl","getNotes","dispatch","getState","get","then","res","setListNotes","data","console","log","addNote","newNote","notesReducer","type","setNewNote","deleteNote","notes","setId","_id","updateNote","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpDJ,EAAAA,KAAK,CACFK,GADH,WACUJ,QADV,gBAEGK,IAFH,CAEQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAACK,YAAY,CAACD,GAAG,CAACE,IAAL,CAAb,CAAR;AACD,GAJH,EAKGH,IALH,CAKQI,OAAO,CAACC,GALhB;AAMD,CAPM;AASP,OAAO,MAAMC,OAAO,GAAGC,OAAO,IAAI,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAAA,QACjDS,OADiD,GACtCT,QAAQ,GAAGU,YAD2B,CACjDD,OADiD;AAExDb,EAAAA,KAAK,CACFK,GADH,WACUJ,QADV,8BACsCY,OADtC,GAEGP,IAFH,CAEQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAE,UADC;AAEPF,MAAAA,OAAO,EAAEN,GAAG,CAACE;AAFN,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAACa,UAAU,CAAC,EAAD,CAAX,CAAR;AACAb,IAAAA,QAAQ,CAACK,YAAY,EAAb,CAAR;AACAL,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GAVH,EAWGI,IAXH,CAWQI,OAAO,CAACC,GAXhB;AAYD,CAdM;AAgBP,OAAO,MAAMM,UAAU,GAAGJ,OAAO,IAAG,CAACV,QAAD,EAAUC,QAAV,KAAsB;AAExDJ,EAAAA,KAAK,CAACK,GAAN,WAAaJ,QAAb,kBACCK,IADD,CACMH,QAAQ,CAACD,QAAQ,EAAT,CADd,EAECI,IAFD,CAEMI,OAAO,CAACC,GAFd;AAGD,CALM;AAOP,OAAO,MAAMH,YAAY,GAAGU,KAAK,KAAK;AACpCH,EAAAA,IAAI,EAAE,gBAD8B;AAEpCG,EAAAA;AAFoC,CAAL,CAA1B;AAKP,OAAO,MAAMC,KAAK,GAAGC,GAAG,KAAK;AAC3BL,EAAAA,IAAI,EAAE,QADqB;AAE3BK,EAAAA;AAF2B,CAAL,CAAjB;AAKP,OAAO,MAAMJ,UAAU,GAAGH,OAAO,KAAK;AACpCE,EAAAA,IAAI,EAAE,cAD8B;AAEpCF,EAAAA;AAFoC,CAAL,CAA1B;AAKP,OAAO,MAAMQ,UAAU,GAAG,MAAM,CAAClB,QAAD,EAAWC,QAAX,KAAwB;AAAA,gCAC7BA,QAAQ,GAAGU,YADkB;AAAA,QAC9CM,GAD8C,yBAC9CA,GAD8C;AAAA,QACzCP,OADyC,yBACzCA,OADyC;AAGtDb,EAAAA,KAAK,CACFK,GADH,uBACsBe,GADtB,oBACmCP,OADnC,GAEGP,IAFH,CAEQ,MAAM;AACVH,IAAAA,QAAQ,CAACa,UAAU,CAAC,EAAD,CAAX,CAAR;AACAb,IAAAA,QAAQ,CAACgB,KAAK,CAAC,EAAD,CAAN,CAAR;AACAhB,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GANH,EAOGoB,KAPH,CAOSZ,OAAO,CAACC,GAPjB;AAQD,CAXM","sourcesContent":["import axios from \"axios\";\r\nconst proxyUrl = \"http://localhost:3004\";\r\n\r\nexport const getNotes = () => (dispatch, getState) => {\r\n  axios\r\n    .get(`${proxyUrl}/allNotes`)\r\n    .then(res => {\r\n      dispatch(setListNotes(res.data));\r\n    })\r\n    .then(console.log);\r\n};\r\n\r\nexport const addNote = newNote => (dispatch, getState) => {\r\n  const {newNote} = getState().notesReducer\r\n  axios\r\n    .get(`${proxyUrl}/addNote?newNote=${newNote}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: \"ADD_NOTE\",\r\n        newNote: res.data\r\n      });\r\n      dispatch(setNewNote(\"\"))\r\n      dispatch(setListNotes())\r\n      dispatch(getNotes())\r\n    })\r\n    .then(console.log);\r\n};\r\n\r\nexport const deleteNote = newNote =>(dispatch,getState) =>{\r\n\r\n  axios.get(`${proxyUrl}/deleteNote`)\r\n  .then(dispatch(getNotes()))\r\n  .then(console.log)\r\n}\r\n\r\nexport const setListNotes = notes => ({\r\n  type: \"SET_LIST_NOTES\",\r\n  notes\r\n});\r\n\r\nexport const setId = _id => ({\r\n  type: \"SET_ID\",\r\n  _id\r\n});\r\n\r\nexport const setNewNote = newNote => ({\r\n  type: \"SET_NEW_NOTE\",\r\n  newNote\r\n});\r\n\r\nexport const updateNote = () => (dispatch, getState) => {\r\n  const { _id, newNote } = getState().notesReducer;\r\n\r\n  axios\r\n    .get(`/update?_id=${_id}&notes=${newNote}`)\r\n    .then(() => {\r\n      dispatch(setNewNote(\"\"));\r\n      dispatch(setId(\"\"));\r\n      dispatch(getNotes());\r\n    })\r\n    .catch(console.log);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}