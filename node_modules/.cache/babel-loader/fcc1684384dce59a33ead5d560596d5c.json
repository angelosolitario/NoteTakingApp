{"ast":null,"code":"import _defineProperty from\"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}// Creating a reducer\n// Step 1 initialize state\nvar INITIAL_STATE={username:'',password:'',isLoggedIn:false,activeUsers:0};// Step 2 create listener function\nvar userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;// Step 3 create switch for action types\nswitch(action.type){case'SET_ACTIVE_USERS':return _objectSpread({},state,{activeUsers:action.activeUsers});case'SET_IS_LOGGED_IN':return _objectSpread({},state,{isLoggedIn:action.isLoggedIn});case'SET_USERNAME':return _objectSpread({},state,{// spread operator\n// email: state.email,\n// isLoggedIn: state.isLoggedIn,\nusername:action.username});case'SET_PASSWORD':return _objectSpread({},state,{password:action.password});default:return state;}};// don't forget to export\nexport default userReducer;","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/redux/reducers/userReducer.js"],"names":["INITIAL_STATE","username","password","isLoggedIn","activeUsers","userReducer","state","action","type"],"mappings":"05BAAA;AAEA;AACA,GAAMA,CAAAA,aAAa,CAAG,CACpBC,QAAQ,CAAE,EADU,CAEpBC,QAAQ,CAAC,EAFW,CAGpBC,UAAU,CAAE,KAHQ,CAIpBC,WAAW,CAAE,CAJO,CAAtB,CAOA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BN,aAA0B,IAAXO,CAAAA,MAAW,2CACrD;AACA,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,kBAAL,CACE,wBACKF,KADL,EAEEF,WAAW,CAAEG,MAAM,CAACH,WAFtB,GAIF,IAAK,kBAAL,CACE,wBACKE,KADL,EAEEH,UAAU,CAAEI,MAAM,CAACJ,UAFrB,GAIF,IAAK,cAAL,CACE,wBACKG,KADL,EACY;AACV;AACA;AACAL,QAAQ,CAAEM,MAAM,CAACN,QAJnB,GAMF,IAAK,cAAL,CACE,wBACKK,KADL,EAEEJ,QAAQ,CAACK,MAAM,CAACL,QAFlB,GAIF,QACE,MAAOI,CAAAA,KAAP,CAxBJ,CA0BD,CA5BD,CA8BA;AACA,cAAeD,CAAAA,WAAf","sourcesContent":["// Creating a reducer\r\n\r\n// Step 1 initialize state\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  password:'',\r\n  isLoggedIn: false,\r\n  activeUsers: 0,\r\n};\r\n\r\n// Step 2 create listener function\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  // Step 3 create switch for action types\r\n  switch (action.type) {\r\n    case 'SET_ACTIVE_USERS':\r\n      return{\r\n        ...state,\r\n        activeUsers: action.activeUsers\r\n      }\r\n    case 'SET_IS_LOGGED_IN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLoggedIn,\r\n      };\r\n    case 'SET_USERNAME':\r\n      return {\r\n        ...state, // spread operator\r\n        // email: state.email,\r\n        // isLoggedIn: state.isLoggedIn,\r\n        username: action.username,\r\n      };\r\n    case 'SET_PASSWORD':\r\n      return{\r\n        ...state,\r\n        password:action.password\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// don't forget to export\r\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}