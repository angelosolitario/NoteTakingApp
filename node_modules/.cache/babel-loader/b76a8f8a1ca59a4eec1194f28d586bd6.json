{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport md5 from 'md5';\nimport axios from \"axios\";\nimport { setIsLoggedIn } from \"../redux/actions/usersActions\";\nconst options = {\n  withCredentials: true\n};\n\nconst Login = ({\n  dispatch,\n  username,\n  password,\n  isLoggedIn\n}) => {\n  const validate = () => {\n    const body = {\n      username,\n      password: md5(password)\n    };\n    axios.post('/authserver/', body, options).then(res => {\n      if (res.data.valid) {\n        document.cookie = \"username=\".concat(username);\n        document.cookies = \"password=\".concat(password);\n        dispatch(setIsLoggedIn(true));\n      } else {\n        dispatch(setIsLoggedIn(false));\n        console.log(\"Invalid user credentials\");\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Username:\"), React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: validate,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"LOGIN\")));\n};\n\nconst mapStateToProps = state => ({\n  username: state.userReducer.username,\n  password: state.userReducer.password,\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Login.js"],"names":["React","useState","connect","Redirect","md5","axios","setIsLoggedIn","options","withCredentials","Login","dispatch","username","password","isLoggedIn","validate","body","post","then","res","data","valid","document","cookie","cookies","console","log","mapStateToProps","state","userReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AAGA,MAAMC,OAAO,GAAG;AACZC,EAAAA,eAAe,EAAE;AADL,CAAhB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,QAAV;AAAmBC,EAAAA,QAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAA6C;AAEvD,QAAMC,QAAQ,GAAG,MAAK;AAElB,UAAMC,IAAI,GAAG;AACTJ,MAAAA,QADS;AAETC,MAAAA,QAAQ,EAAER,GAAG,CAACQ,QAAD;AAFJ,KAAb;AAKAP,IAAAA,KAAK,CAACW,IAAN,CAAW,cAAX,EAA0BD,IAA1B,EAA+BR,OAA/B,EACCU,IADD,CACMC,GAAG,IAAE;AACP,UAAGA,GAAG,CAACC,IAAJ,CAASC,KAAZ,EAAkB;AACdC,QAAAA,QAAQ,CAACC,MAAT,sBAA8BX,QAA9B;AACAU,QAAAA,QAAQ,CAACE,OAAT,sBAA+BX,QAA/B;AACAF,QAAAA,QAAQ,CAACJ,aAAa,CAAC,IAAD,CAAd,CAAR;AACH,OAJD,MAIK;AACDI,QAAAA,QAAQ,CAACJ,aAAa,CAAC,KAAD,CAAd,CAAR;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH;AACJ,KAVD;AAYH,GAnBD;;AAqBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,EAWI;AAAQ,IAAA,OAAO,EAAIX,QAAnB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXJ,CADJ,CADJ;AAiBH,CAxCD;;AA0CA,MAAMY,eAAe,GAAGC,KAAK,KAAI;AAC7BhB,EAAAA,QAAQ,EAAEgB,KAAK,CAACC,WAAN,CAAkBjB,QADC;AAE7BC,EAAAA,QAAQ,EAAEe,KAAK,CAACC,WAAN,CAAkBhB,QAFC;AAG7BC,EAAAA,UAAU,EAAEc,KAAK,CAACC,WAAN,CAAkBf;AAHD,CAAJ,CAA7B;;AAOA,eAAeX,OAAO,CAACwB,eAAD,CAAP,CAAyBjB,KAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom';\r\nimport md5 from 'md5'\r\nimport axios from \"axios\";\r\nimport { setIsLoggedIn } from \"../redux/actions/usersActions\";\r\n\r\n\r\nconst options = {\r\n    withCredentials: true,\r\n}\r\n\r\nconst Login = ({dispatch,username,password,isLoggedIn}) => {\r\n\r\n    const validate = () =>{\r\n\r\n        const body = {\r\n            username,\r\n            password: md5(password)\r\n        }\r\n\r\n        axios.post('/authserver/',body,options)\r\n        .then(res=>{\r\n            if(res.data.valid){\r\n                document.cookie = `username=${username}`\r\n                document.cookies = `password=${password}`\r\n                dispatch(setIsLoggedIn(true))\r\n            }else{\r\n                dispatch(setIsLoggedIn(false))\r\n                console.log(\"Invalid user credentials\")\r\n            }\r\n        })\r\n    \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <form>\r\n                <div>\r\n                    <p>Username:</p>\r\n                    <input type=\"text\"></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input type=\"text\"></input>\r\n                </div>\r\n\r\n                <button onClick = {validate} type=\"button\">LOGIN</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    username: state.userReducer.username,\r\n    password: state.userReducer.password,\r\n    isLoggedIn: state.userReducer.isLoggedIn,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}