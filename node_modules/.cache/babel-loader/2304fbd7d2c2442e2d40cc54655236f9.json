{"ast":null,"code":"import axios from \"axios\";\nconst proxyUrl = \"http://localhost:3004\";\nexport const getNotes = () => (dispatch, getState) => {\n  axios.get(\"/allNotes\").then(res => {\n    dispatch(setListNotes(res.data));\n  }).then(console.log);\n};\nexport const addNote = newNote => (dispatch, getState) => {\n  const newNote = getState().notesReducer.newNote;\n  axios.get(\"\".concat(proxyUrl, \"/addNote?newNote=\").concat(newNote)).then(res => {\n    dispatch({\n      type: \"ADD_NOTE\",\n      newNote: res.data\n    });\n    dispatch(setNewNote(\"\"));\n    dispatch(setId(\"\"));\n    dispatch(getNotes());\n  }).then(console.log);\n};\nexport const deleteNote = () => (dispatch, getState) => {\n  const _id = getState().notesReducer._id;\n\n  axios.delete(\"/deleteNote/\".concat(_id), {\n    params: {\n      _id: _id\n    }\n  }).then(res => {\n    dispatch({\n      type: \"DELETE_NOTE\",\n      _id\n    });\n    dispatch(setNewNote(\"\"));\n    dispatch(setId(\"\"));\n    dispatch(getNotes());\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const updateNote = () => (dispatch, getState) => {\n  const _getState$notesReduce = getState().notesReducer,\n        _id = _getState$notesReduce._id,\n        newNote = _getState$notesReduce.newNote;\n  axios.get(\"/updateNote?id=\".concat(_id, \"&newNote=\").concat(newNote)).then(() => {\n    dispatch(setNewNote(''));\n    dispatch(setId(''));\n    dispatch(getNotes());\n  });\n};\nexport const setListNotes = notes => ({\n  type: \"SET_LIST_NOTES\",\n  notes\n});\nexport const setId = _id => ({\n  type: \"SET_ID\",\n  _id\n});\nexport const setNewNote = newNote => ({\n  type: \"SET_NEW_NOTE\",\n  newNote\n});\nexport const setActionType = actionType => ({\n  type: 'SET_ACTION_TYPE',\n  actionType\n});\nexport const updateNote2 = () => (dispatch, getState) => {\n  const _getState$notesReduce2 = getState().notesReducer,\n        _id = _getState$notesReduce2._id,\n        newNote = _getState$notesReduce2.newNote;\n  axios.get(\"/update?_id=\".concat(_id, \"&notes=\").concat(newNote)).then(() => {\n    dispatch(setNewNote(\"\"));\n    dispatch(setId(\"\"));\n    dispatch(getNotes());\n  }).catch(console.log);\n};","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/redux/actions/notesActions.js"],"names":["axios","proxyUrl","getNotes","dispatch","getState","get","then","res","setListNotes","data","console","log","addNote","newNote","notesReducer","type","setNewNote","setId","deleteNote","_id","delete","params","catch","err","updateNote","notes","setActionType","actionType","updateNote2"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nconst proxyUrl = \"http://localhost:3004\";\r\n\r\n\r\nexport const getNotes = () => (dispatch, getState) => {\r\n    axios\r\n        .get(`/allNotes`)\r\n        .then(res => {\r\n            dispatch(setListNotes(res.data));\r\n        })\r\n        .then(console.log);\r\n};\r\n\r\nexport const addNote = newNote => (dispatch, getState) => {\r\n    const { newNote } = getState().notesReducer;\r\n    axios\r\n        .get(`${proxyUrl}/addNote?newNote=${newNote}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: \"ADD_NOTE\",\r\n                newNote: res.data\r\n            });\r\n            dispatch(setNewNote(\"\"));\r\n            dispatch(setId(\"\"));\r\n            dispatch(getNotes());\r\n        })\r\n        .then(console.log);\r\n};\r\n\r\nexport const deleteNote = () => (dispatch, getState) => {\r\n    const { _id } = getState().notesReducer;\r\n    axios\r\n        .delete(`/deleteNote/${_id}`, { params: { _id: _id } })\r\n        .then(res => {\r\n            dispatch({\r\n                type: \"DELETE_NOTE\",\r\n                _id\r\n            });\r\n            dispatch(setNewNote(\"\"));\r\n            dispatch(setId(\"\"));\r\n            dispatch(getNotes());\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const updateNote = () => (dispatch,getState) =>{\r\n    const {_id,newNote} = getState().notesReducer\r\n    axios.get(`/updateNote?id=${_id}&newNote=${newNote}`)\r\n    .then(()=>{\r\n        dispatch(setNewNote(''))\r\n        dispatch(setId(''))\r\n        dispatch(getNotes())\r\n    })\r\n}\r\n\r\nexport const setListNotes = notes => ({\r\n    type: \"SET_LIST_NOTES\",\r\n    notes\r\n});\r\n\r\nexport const setId = _id => ({\r\n    type: \"SET_ID\",\r\n    _id\r\n});\r\n\r\nexport const setNewNote = newNote => ({\r\n    type: \"SET_NEW_NOTE\",\r\n    newNote\r\n});\r\n\r\nexport const setActionType = (actionType) =>({\r\n    type: 'SET_ACTION_TYPE',\r\n    actionType,\r\n})\r\n\r\nexport const updateNote2 = () => (dispatch, getState) => {\r\n    const { _id, newNote } = getState().notesReducer;\r\n\r\n    axios\r\n        .get(`/update?_id=${_id}&notes=${newNote}`)\r\n        .then(() => {\r\n            dispatch(setNewNote(\"\"));\r\n            dispatch(setId(\"\"));\r\n            dispatch(getNotes());\r\n        })\r\n        .catch(console.log);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}