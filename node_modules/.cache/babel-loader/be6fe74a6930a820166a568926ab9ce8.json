{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{Redirect}from\"react-router-dom\";import md5 from\"md5\";import axios from\"axios\";import{setIsLoggedIn,setUsername,setPassword,setActiveUsers}from\"../redux/actions/usersActions\";var options={withCredentials:true};var Login=function Login(_ref){var dispatch=_ref.dispatch,username=_ref.username,password=_ref.password,isLoggedIn=_ref.isLoggedIn;var validate=function validate(e){e.preventDefault();var body={username:username,password:md5(password)};axios.post(\"/authserver/login\",body,options).then(function(res){if(res.data.valid){dispatch(setIsLoggedIn(true));dispatch(setActiveUsers(res.data.counter));document.cookie=\"username=\".concat(username);document.cookie=\"activeusers=\".concat(res.data.counter);document.cookie=\"password=\".concat(md5(password));document.cookie=\"loggedin=true\";}else{dispatch(setIsLoggedIn(false));document.cookie=\"username=\";document.cookie=\"password=\";document.cookie=\"loggedin=false\";console.log(\"Invalid user credentials\");}console.log(res);}).catch(console.log());};return React.createElement(\"div\",null,isLoggedIn&&React.createElement(Redirect,{to:\"/\"}),React.createElement(\"form\",null,React.createElement(\"div\",null,React.createElement(\"p\",null,\"Username:\"),React.createElement(\"input\",{name:\"username\",type:\"text\",onChange:function onChange(e){return dispatch(setUsername(e.target.value));}})),React.createElement(\"div\",null,React.createElement(\"p\",null,\"Password\"),React.createElement(\"input\",{name:\"password\",type:\"text\",onChange:function onChange(e){return dispatch(setPassword(e.target.value));}})),React.createElement(\"button\",{onClick:validate,type:\"button\"},\"LOGIN\")));};var mapStateToProps=function mapStateToProps(state){return{username:state.userReducer.username,password:state.userReducer.password,isLoggedIn:state.userReducer.isLoggedIn};};export default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Login.js"],"names":["React","connect","Redirect","md5","axios","setIsLoggedIn","setUsername","setPassword","setActiveUsers","options","withCredentials","Login","dispatch","username","password","isLoggedIn","validate","e","preventDefault","body","post","then","res","data","valid","counter","document","cookie","console","log","catch","target","value","mapStateToProps","state","userReducer"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport md5 from \"md5\";\r\nimport axios from \"axios\";\r\nimport { setIsLoggedIn, setUsername, setPassword, setActiveUsers } from \"../redux/actions/usersActions\";\r\n\r\nconst options = {\r\n    withCredentials: true\r\n};\r\n\r\nconst Login = ({ dispatch, username, password, isLoggedIn }) => {\r\n\r\n    const validate = (e) => {\r\n        e.preventDefault()\r\n        const body = {\r\n            username,\r\n            password: md5(password)\r\n        };\r\n        axios.post(\"/authserver/login\", body, options).then(res => {\r\n            if (res.data.valid) {\r\n                dispatch(setIsLoggedIn(true));\r\n                dispatch(setActiveUsers(res.data.counter))\r\n                document.cookie = `username=${username}`;\r\n                document.cookie = `activeusers=${res.data.counter}`\r\n                document.cookie = `password=${md5(password)}`;\r\n                document.cookie = `loggedin=true`;\r\n\r\n            } else {\r\n                dispatch(setIsLoggedIn(false));\r\n                document.cookie = `username=`;\r\n                document.cookie = `password=`;\r\n                document.cookie = `loggedin=false`;\r\n                console.log(\"Invalid user credentials\");\r\n            }\r\n            console.log(res)\r\n        })\r\n        .catch(console.log())\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isLoggedIn && <Redirect to=\"/\" />}\r\n            <form>\r\n                <div>\r\n                    <p>Username:</p>\r\n                    <input name=\"username\" type=\"text\" onChange={(e)=>dispatch(setUsername(e.target.value))}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input name=\"password\" type=\"text\" onChange={(e)=>dispatch(setPassword(e.target.value))}></input>\r\n                </div>\r\n\r\n                <button onClick={validate} type=\"button\">\r\n                    LOGIN\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    username: state.userReducer.username,\r\n    password: state.userReducer.password,\r\n    isLoggedIn: state.userReducer.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}