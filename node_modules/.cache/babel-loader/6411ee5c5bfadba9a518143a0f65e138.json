{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNotes, addNote, setId, setNewNote, updateNote, deleteNote } from \"../redux/actions/notesActions\";\n\nconst Note = ({\n  dispatch,\n  newNote,\n  notes,\n  _id\n}) => {\n  React.useEffect(() => {\n    dispatch(getNotes());\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Make a new note!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    name: \"description\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"ADD\")), notes.map((note, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, note.description))));\n};\n\nconst mapStatetoProps = state => ({\n  notes: state.notesReducer.notes\n});\n\nexport default connect(mapStatetoProps)(Note);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js"],"names":["React","useState","connect","getNotes","addNote","setId","setNewNote","updateNote","deleteNote","Note","dispatch","newNote","notes","_id","useEffect","map","note","i","description","mapStatetoProps","state","notesReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,UANF,QAOO,+BAPP;;AASA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAAuC;AAClDb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,QAAQ,CAACP,QAAQ,EAAT,CAAR;AACD,GAFD,EAEG,EAFH;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CADF,EAYGS,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,WAAT,CADF,CADD,CAZH,CADF;AAoBD,CAzBD;;AA2BA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,KAAK,EAAEQ,KAAK,CAACC,YAAN,CAAmBT;AADM,CAAL,CAA7B;;AAGA,eAAeV,OAAO,CAACiB,eAAD,CAAP,CAAyBV,IAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getNotes,\n  addNote,\n  setId,\n  setNewNote,\n  updateNote,\n  deleteNote\n} from \"../redux/actions/notesActions\";\n\nconst Note = ({ dispatch, newNote, notes, _id }) => {\n  React.useEffect(() => {\n    dispatch(getNotes());\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h1>Make a new note!</h1>\n\n        <p>Description</p>\n        <input name=\"description\" type=\"text\"></input>\n\n        <button type=\"button\">\n          ADD\n        </button>\n      </div>\n\n      {notes.map((note, i) => (\n        <div key={i}>\n          <p>{note.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStatetoProps = state => ({\n  notes: state.notesReducer.notes\n});\nexport default connect(mapStatetoProps)(Note);\n"]},"metadata":{},"sourceType":"module"}