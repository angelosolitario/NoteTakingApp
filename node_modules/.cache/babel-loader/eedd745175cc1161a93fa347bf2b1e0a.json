{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{Redirect}from\"react-router-dom\";import{setUsername,setPassword,setIsLoggedIn}from\"../redux/actions/usersActions\";import axios from\"axios\";import md5 from\"md5\";var Signup=function Signup(_ref){var dispatch=_ref.dispatch,username=_ref.username,password=_ref.password,isLoggedIn=_ref.isLoggedIn;var handleOnSubmit=function handleOnSubmit(e){e.preventDefault();var body={username:username,password:md5(password)};var config={headers:{\"Content-Type\":\"application/json\"},withCredentials:true};axios.post(\"/authserver/addUser\",body,config).then(function(res){dispatch(setIsLoggedIn(true));document.cookie=\"username=\".concat(username);document.cookie=\"activeusers=\".concat(res.data.counter);document.cookie=\"password=\".concat(md5(password));document.cookie=\"loggedin=true\";}).catch(function(e){dispatch(setIsLoggedIn(false));document.cookie=\"username=\";document.cookie=\"password=\";document.cookie=\"loggedin=false\";console.log(\"Invalid user credentials\");});};return React.createElement(\"div\",null,isLoggedIn&&React.createElement(Redirect,{to:\"/\"}),React.createElement(\"p\",null,\"Create an account!\"),React.createElement(\"form\",{onSubmit:handleOnSubmit},React.createElement(\"label\",{for:\"\"},\"Username:\"),React.createElement(\"input\",{onChange:function onChange(e){return dispatch(setUsername(e.target.value));},name:\"username\",type:\"text\"}),React.createElement(\"br\",null),React.createElement(\"label\",{for:\"\"},\"Password:\"),React.createElement(\"input\",{onChange:function onChange(e){return dispatch(setPassword(e.target.value));},name:\"password\",type:\"password\"}),React.createElement(\"br\",null),React.createElement(\"button\",{type:\"submit\"},\"JOIN\")));};var mapStateToProps=function mapStateToProps(state){return{isLoggedIn:state.userReducer.isLoggedIn,username:state.userReducer.username,password:state.userReducer.password};};export default connect(mapStateToProps)(Signup);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Signup.js"],"names":["React","connect","Redirect","setUsername","setPassword","setIsLoggedIn","axios","md5","Signup","dispatch","username","password","isLoggedIn","handleOnSubmit","e","preventDefault","body","config","headers","withCredentials","post","then","res","document","cookie","data","counter","catch","console","log","target","value","mapStateToProps","state","userReducer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OACIC,WADJ,CAEIC,WAFJ,CAGIC,aAHJ,KAIO,+BAJP,CAKA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,KAAhB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAkD,IAA/CC,CAAAA,QAA+C,MAA/CA,QAA+C,CAArCC,QAAqC,MAArCA,QAAqC,CAA3BC,QAA2B,MAA3BA,QAA2B,CAAjBC,UAAiB,MAAjBA,UAAiB,CAC7D,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,IAAI,CAAG,CACTN,QAAQ,CAARA,QADS,CAETC,QAAQ,CAAEJ,GAAG,CAACI,QAAD,CAFJ,CAAb,CAKA,GAAMM,CAAAA,MAAM,CAAG,CACXC,OAAO,CAAE,CACL,eAAgB,kBADX,CADE,CAIXC,eAAe,CAAE,IAJN,CAAf,CAOAb,KAAK,CACAc,IADL,CACU,qBADV,CACiCJ,IADjC,CACuCC,MADvC,EAEKI,IAFL,CAEU,SAAAC,GAAG,CAAI,CACTb,QAAQ,CAACJ,aAAa,CAAC,IAAD,CAAd,CAAR,CACAkB,QAAQ,CAACC,MAAT,oBAA8Bd,QAA9B,EACAa,QAAQ,CAACC,MAAT,uBAAiCF,GAAG,CAACG,IAAJ,CAASC,OAA1C,EACAH,QAAQ,CAACC,MAAT,oBAA8BjB,GAAG,CAACI,QAAD,CAAjC,EACAY,QAAQ,CAACC,MAAT,iBAEH,CATL,EAUKG,KAVL,CAUW,SAAAb,CAAC,CAAI,CACRL,QAAQ,CAACJ,aAAa,CAAC,KAAD,CAAd,CAAR,CACAkB,QAAQ,CAACC,MAAT,aACAD,QAAQ,CAACC,MAAT,aACAD,QAAQ,CAACC,MAAT,kBAEAI,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACH,CAjBL,EAkBH,CAjCD,CAmCA,MACI,gCACKjB,UAAU,EAAI,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EADnB,CAEI,kDAFJ,CAGI,4BAAM,QAAQ,CAAEC,cAAhB,EACI,6BAAO,GAAG,CAAC,EAAX,cADJ,CAEI,6BACI,QAAQ,CAAE,kBAAAC,CAAC,QAAIL,CAAAA,QAAQ,CAACN,WAAW,CAACW,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAZ,CAAZ,EADf,CAEI,IAAI,CAAC,UAFT,CAGI,IAAI,CAAC,MAHT,EAFJ,CAOI,8BAPJ,CAQI,6BAAO,GAAG,CAAC,EAAX,cARJ,CASI,6BACI,QAAQ,CAAE,kBAAAjB,CAAC,QAAIL,CAAAA,QAAQ,CAACL,WAAW,CAACU,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAZ,CAAZ,EADf,CAEI,IAAI,CAAC,UAFT,CAGI,IAAI,CAAC,UAHT,EATJ,CAcI,8BAdJ,CAeI,8BAAQ,IAAI,CAAC,QAAb,SAfJ,CAHJ,CADJ,CAuBH,CA3DD,CA6DA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BrB,UAAU,CAAEqB,KAAK,CAACC,WAAN,CAAkBtB,UADA,CAE9BF,QAAQ,CAAEuB,KAAK,CAACC,WAAN,CAAkBxB,QAFE,CAG9BC,QAAQ,CAAEsB,KAAK,CAACC,WAAN,CAAkBvB,QAHE,CAAL,EAA7B,CAMA,cAAeV,CAAAA,OAAO,CAAC+B,eAAD,CAAP,CAAyBxB,MAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n    setUsername,\r\n    setPassword,\r\n    setIsLoggedIn,\r\n} from \"../redux/actions/usersActions\";\r\nimport axios from \"axios\";\r\nimport md5 from \"md5\";\r\n\r\nconst Signup = ({ dispatch, username, password, isLoggedIn }) => {\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const body = {\r\n            username,\r\n            password: md5(password)\r\n        };\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            withCredentials: true\r\n        };\r\n\r\n        axios\r\n            .post(\"/authserver/addUser\", body, config)\r\n            .then(res => {\r\n                dispatch(setIsLoggedIn(true));\r\n                document.cookie = `username=${username}`;\r\n                document.cookie = `activeusers=${res.data.counter}`\r\n                document.cookie = `password=${md5(password)}`;\r\n                document.cookie = `loggedin=true`;\r\n\r\n            })\r\n            .catch(e => {\r\n                dispatch(setIsLoggedIn(false));\r\n                document.cookie = `username=`;\r\n                document.cookie = `password=`;\r\n                document.cookie = `loggedin=false`;\r\n\r\n                console.log(\"Invalid user credentials\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isLoggedIn && <Redirect to=\"/\" />}\r\n            <p>Create an account!</p>\r\n            <form onSubmit={handleOnSubmit}>\r\n                <label for=\"\">Username:</label>\r\n                <input\r\n                    onChange={e => dispatch(setUsername(e.target.value))}\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                ></input>\r\n                <br /> \r\n                <label for=\"\">Password:</label>\r\n                <input\r\n                    onChange={e => dispatch(setPassword(e.target.value))}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                ></input>\r\n                <br />\r\n                <button type=\"submit\">JOIN</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.userReducer.isLoggedIn,\r\n    username: state.userReducer.username,\r\n    password: state.userReducer.password\r\n});\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n"]},"metadata":{},"sourceType":"module"}