{"ast":null,"code":"import React from\"react\";import Navbar from'./components/Navbar';import Note from'./components/Note';import Home from'./components/Home';import Login from'./components/Login';import Signup from'./components/Signup';import{Switch,Route}from\"react-router-dom\";import cookie from'react-cookies';import{connect}from'react-redux';import\"./App.css\";import ActiveUsers from\"./components/ActiveUsers\";import{setIsLoggedIn,setUsername,setActiveUsers}from\"./redux/actions/usersActions\";var App=function App(_ref){var dispatch=_ref.dispatch,isLoggedIn=_ref.isLoggedIn,username=_ref.username;React.useEffect(function(){var username=cookie.load('username');var isLoggedIn=cookie.load('loggedin')===\"true\";var activeUsers=Number(cookie.load('activeusers'));dispatch(setIsLoggedIn(isLoggedIn));dispatch(setUsername(username));dispatch(setActiveUsers(activeUsers));},[dispatch]);return React.createElement(\"div\",{className:\"App\"},React.createElement(ActiveUsers,null),React.createElement(Navbar,null),React.createElement(Switch,null,React.createElement(Route,{path:\"/allNotes\",component:Note}),React.createElement(Route,{path:\"/login\",component:Login}),React.createElement(Route,{path:\"/register\",component:Signup}),React.createElement(Route,{path:\"/\",component:Home})));};var mapStateToProps=function mapStateToProps(state){return{username:state.userReducer.username,isLoggedIn:state.userReducer.isLoggedIn};};export default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/App.js"],"names":["React","Navbar","Note","Home","Login","Signup","Switch","Route","cookie","connect","ActiveUsers","setIsLoggedIn","setUsername","setActiveUsers","App","dispatch","isLoggedIn","username","useEffect","load","activeUsers","Number","mapStateToProps","state","userReducer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,OAASC,aAAT,CAAwBC,WAAxB,CAAqCC,cAArC,KAA2D,8BAA3D,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAoC,IAAlCC,CAAAA,QAAkC,MAAlCA,QAAkC,CAAzBC,UAAyB,MAAzBA,UAAyB,CAAdC,QAAc,MAAdA,QAAc,CAE9CjB,KAAK,CAACkB,SAAN,CAAgB,UAAI,CAClB,GAAMD,CAAAA,QAAQ,CAAGT,MAAM,CAACW,IAAP,CAAY,UAAZ,CAAjB,CACA,GAAMH,CAAAA,UAAU,CAAGR,MAAM,CAACW,IAAP,CAAY,UAAZ,IAA2B,MAA9C,CACA,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACb,MAAM,CAACW,IAAP,CAAY,aAAZ,CAAD,CAA1B,CACAJ,QAAQ,CAACJ,aAAa,CAACK,UAAD,CAAd,CAAR,CACAD,QAAQ,CAACH,WAAW,CAACK,QAAD,CAAZ,CAAR,CACAF,QAAQ,CAACF,cAAc,CAACO,WAAD,CAAf,CAAR,CACD,CAPD,CAOE,CAACL,QAAD,CAPF,EASA,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,oBAAC,WAAD,MADF,CAEE,oBAAC,MAAD,MAFF,CAGE,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,SAAS,CAAEb,IAAnC,EADF,CAEE,oBAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAEE,KAAhC,EAFF,CAGE,oBAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,SAAS,CAAEC,MAAnC,EAHF,CAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,SAAS,CAAEF,IAA3B,EAJF,CAHF,CADF,CAYD,CAvBD,CAyBA,GAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCN,QAAQ,CAAEM,KAAK,CAACC,WAAN,CAAkBP,QADI,CAEhCD,UAAU,CAAEO,KAAK,CAACC,WAAN,CAAkBR,UAFE,CAAL,EAA7B,CAKA,cAAeP,CAAAA,OAAO,CAACa,eAAD,CAAP,CAAyBR,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport Navbar from './components/Navbar'\nimport Note from './components/Note'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport { Switch, Route } from \"react-router-dom\";\nimport cookie from 'react-cookies'\nimport {connect} from 'react-redux'\nimport \"./App.css\";\nimport ActiveUsers from \"./components/ActiveUsers\";\nimport { setIsLoggedIn, setUsername, setActiveUsers } from \"./redux/actions/usersActions\";\n\nconst App = ({dispatch,isLoggedIn,username}) => {\n\n  React.useEffect(()=>{\n    const username = cookie.load('username')\n    const isLoggedIn = cookie.load('loggedin') ===\"true\"\n    const activeUsers = Number(cookie.load('activeusers'))\n    dispatch(setIsLoggedIn(isLoggedIn))\n    dispatch(setUsername(username))\n    dispatch(setActiveUsers(activeUsers))\n  },[dispatch])\n\n  return (\n    <div className=\"App\">\n      <ActiveUsers />\n      <Navbar/>\n      <Switch>\n        <Route path=\"/allNotes\" component={Note}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/register\" component={Signup}/>\n        <Route path=\"/\" component={Home}/>\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  username: state.userReducer.username,\n  isLoggedIn: state.userReducer.isLoggedIn,\n})\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}