{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport md5 from \"md5\";\nimport axios from \"axios\";\nimport { setIsLoggedIn, setUsername, setPassword } from \"../redux/actions/usersActions\";\nconst options = {\n  withCredentials: true\n};\n\nconst Login = ({\n  dispatch,\n  username,\n  password,\n  isLoggedIn\n}) => {\n  const validate = e => {\n    e.preventDefault();\n    const body = {\n      username,\n      password: md5(password)\n    };\n    axios.post(\"/authserver/login\", body, options).then(res => {\n      if (res.data.valid) {\n        document.cookie = \"username=\".concat(username);\n        document.cookie = \"password=\".concat(md5(password));\n        dispatch(setIsLoggedIn(true));\n      } else {\n        document.cookie = \"username=\";\n        document.cookie = \"password=\";\n        dispatch(setIsLoggedIn(false));\n        console.log(\"Invalid user credentials\");\n      }\n    }).catch(console.log(object));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, isLoggedIn && React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Username:\"), React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    onChange: e => dispatch(setUsername(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    name: \"password\",\n    type: \"text\",\n    onChange: e => dispatch(setPassword(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: validate,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"LOGIN\")));\n};\n\nconst mapStateToProps = state => ({\n  username: state.userReducer.username,\n  password: state.userReducer.password,\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Login.js"],"names":["React","useState","connect","Redirect","md5","axios","setIsLoggedIn","setUsername","setPassword","options","withCredentials","Login","dispatch","username","password","isLoggedIn","validate","e","preventDefault","body","post","then","res","data","valid","document","cookie","console","log","catch","object","target","value","mapStateToProps","state","userReducer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport md5 from \"md5\";\r\nimport axios from \"axios\";\r\nimport { setIsLoggedIn, setUsername, setPassword } from \"../redux/actions/usersActions\";\r\n\r\nconst options = {\r\n    withCredentials: true\r\n};\r\n\r\nconst Login = ({ dispatch, username, password, isLoggedIn }) => {\r\n    const validate = (e) => {\r\n        e.preventDefault()\r\n        const body = {\r\n            username,\r\n            password: md5(password)\r\n        };\r\n        axios.post(\"/authserver/login\", body, options).then(res => {\r\n            if (res.data.valid) {\r\n                document.cookie = `username=${username}`;\r\n                document.cookie = `password=${md5(password)}`;\r\n                dispatch(setIsLoggedIn(true));\r\n            } else {\r\n                document.cookie = `username=`;\r\n                document.cookie = `password=`;\r\n                dispatch(setIsLoggedIn(false));\r\n                console.log(\"Invalid user credentials\");\r\n            }\r\n        })\r\n        .catch(console.log(object))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isLoggedIn && <Redirect to=\"/\" />}\r\n            <form>\r\n                <div>\r\n                    <p>Username:</p>\r\n                    <input name=\"username\" type=\"text\" onChange={(e)=>dispatch(setUsername(e.target.value))}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input name=\"password\" type=\"text\" onChange={(e)=>dispatch(setPassword(e.target.value))}></input>\r\n                </div>\r\n\r\n                <button onClick={validate} type=\"button\">\r\n                    LOGIN\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    username: state.userReducer.username,\r\n    password: state.userReducer.password,\r\n    isLoggedIn: state.userReducer.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}