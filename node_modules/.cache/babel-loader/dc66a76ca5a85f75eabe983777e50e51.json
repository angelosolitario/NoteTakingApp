{"ast":null,"code":"import _defineProperty from \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  notes: [],\n  newNote: '',\n  actionType: 'Add',\n  _id: '',\n  loading: false\n};\n\nconst notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_LIST_NOTES':\n      return _objectSpread({}, state, {\n        notes: action.notes\n      });\n\n    case 'SET_ACTION_TYPE':\n      return _objectSpread({}, state, {\n        actionType: action.actionType\n      });\n\n    case 'DELETE_NOTE':\n      return _objectSpread({}, state, {\n        notes: state.notes.filter(note => note._id !== action.id)\n      });\n\n    case 'SET_NEW_NOTE':\n      return _objectSpread({}, state, {\n        newNote: action.newNote\n      });\n\n    case 'SET_ID':\n      return _objectSpread({}, state, {\n        _id: action._id\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default notesReducer;","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/redux/reducers/notesReducer.js"],"names":["initialState","notes","newNote","actionType","_id","loading","notesReducer","state","action","type","filter","note","id"],"mappings":";;;;;;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,GAAG,EAAC,EAJa;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAiC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,gBAAL;AACI,+BACOF,KADP;AAEIN,QAAAA,KAAK,EAACO,MAAM,CAACP;AAFjB;;AAIJ,SAAK,iBAAL;AACI,+BACOM,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL;AAFvB;;AAIJ,SAAK,aAAL;AACI,+BACOI,KADP;AAEIN,QAAAA,KAAK,EAACM,KAAK,CAACN,KAAN,CAAYS,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACP,GAAL,KAAaI,MAAM,CAACI,EAA/C;AAFV;;AAIJ,SAAK,cAAL;AACI,+BACOL,KADP;AAEIL,QAAAA,OAAO,EAAEM,MAAM,CAACN;AAFpB;;AAIJ,SAAK,QAAL;AACI,+BACOK,KADP;AAEIH,QAAAA,GAAG,EAAEI,MAAM,CAACJ;AAFhB;;AAIJ;AACI,aAAOG,KAAP;AA3BR;AA6BH,CA9BD;;AAgCA,eAAeD,YAAf","sourcesContent":["\nconst initialState = {\n    notes:[],\n    newNote: '',\n    actionType: 'Add',\n    _id:'',\n    loading: false\n}\n\nconst notesReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case 'SET_LIST_NOTES':\n            return {\n                ...state,\n                notes:action.notes\n            }\n        case 'SET_ACTION_TYPE':\n            return{\n                ...state,\n                actionType: action.actionType,\n            }\n        case 'DELETE_NOTE':\n            return{\n                ...state,\n                notes:state.notes.filter(note => note._id !== action.id)\n            }\n        case 'SET_NEW_NOTE':\n            return{\n                ...state,\n                newNote: action.newNote,\n            }\n        case 'SET_ID':\n            return{\n                ...state,\n                _id: action._id\n            }\n        default:\n            return state\n        }   \n}\n\nexport default notesReducer;"]},"metadata":{},"sourceType":"module"}