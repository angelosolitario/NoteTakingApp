{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{getNotes,addNote,deleteNote,updateNote,setId,setNewNote,setActionType}from\"../redux/actions/notesActions\";var Note=function Note(_ref){var isLoggedIn=_ref.isLoggedIn,dispatch=_ref.dispatch,username=_ref.username,notes=_ref.notes,newNote=_ref.newNote,actionType=_ref.actionType,_id=_ref._id;React.useEffect(function(){dispatch(getNotes());},[dispatch]);var handleOnClick=function handleOnClick(){if(actionType===\"Edit\"){return dispatch(updateNote());}return dispatch(addNote(username,newNote),window.location.reload());};return React.createElement(\"div\",null,!isLoggedIn&&React.createElement(React.Fragment,null,React.createElement(\"p\",null,\"You need access to view all notes or add a note. Please log in or Sign up\")),React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Make a new note!\"),React.createElement(\"input\",{onChange:function onChange(e){return dispatch(setId(e.target.value));},type:\"text\",value:_id,placeholder:\"enter id here\"}),React.createElement(\"input\",{onChange:function onChange(e){return dispatch(setNewNote(e.target.value));},name:\"description\",placeholder:\"enter new note here\",value:newNote,type:\"text\"}),React.createElement(\"button\",{onClick:handleOnClick,type:\"button\"},actionType,\" Note\")),React.createElement(\"table\",null,React.createElement(\"tbody\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"id\"),React.createElement(\"th\",null,\"Description\"),React.createElement(\"th\",null,\"User\"),React.createElement(\"th\",null,\"Actions\")),notes.map(function(note){return React.createElement(\"tr\",{key:note._id},React.createElement(\"td\",{width:\"35%\"},note._id),React.createElement(\"td\",{width:\"50%\"},note.description),React.createElement(\"td\",{width:\"10%\"}),React.createElement(\"td\",{width:\"5%\"},React.createElement(\"button\",{onClick:function onClick(){dispatch(setActionType(\"Edit\"));dispatch(setId(note._id));dispatch(setNewNote(note.description));}},\"Edit\"),React.createElement(\"button\",{onClick:function onClick(){dispatch(setId(note._id));dispatch(deleteNote(note._id));}},\"Delete\")));}))));};var mapStatetoProps=function mapStatetoProps(state){return{username:state.userReducer.username,notes:state.notesReducer.notes,actionType:state.notesReducer.actionType,_id:state.notesReducer._id,newNote:state.notesReducer.newNote,isLoggedIn:state.userReducer.isLoggedIn};};export default connect(mapStatetoProps)(Note);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js"],"names":["React","connect","getNotes","addNote","deleteNote","updateNote","setId","setNewNote","setActionType","Note","isLoggedIn","dispatch","username","notes","newNote","actionType","_id","useEffect","handleOnClick","window","location","reload","e","target","value","map","note","description","mapStatetoProps","state","userReducer","notesReducer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getNotes,\n    addNote,\n    deleteNote,\n    updateNote,\n    setId,\n    setNewNote,\n    setActionType\n} from \"../redux/actions/notesActions\";\n\nconst Note = ({\n    isLoggedIn,\n    dispatch,\n    username,\n    notes,\n    newNote,\n    actionType,\n    _id\n}) => {\n    React.useEffect(() => {\n        dispatch(getNotes());\n    }, [dispatch]);\n\n    const handleOnClick = () => {\n        if (actionType === \"Edit\") {\n            return dispatch(updateNote());\n        }\n        return dispatch(addNote(username, newNote),window.location.reload());\n    };\n\n    return (\n        <div>\n            {!isLoggedIn && (\n                <>\n                    <p>\n                        You need access to view all notes or add a note. Please\n                        log in or Sign up\n                    </p>\n                </>\n            )}\n            <div>\n                <h1>Make a new note!</h1>\n                <input\n                    onChange={e => dispatch(setId(e.target.value))}\n                    type=\"text\"\n                    value={_id}\n                    placeholder=\"enter id here\"\n                ></input>\n                <input\n                    onChange={e => dispatch(setNewNote(e.target.value))}\n                    name=\"description\"\n                    placeholder=\"enter new note here\"\n                    value={newNote}\n                    type=\"text\"\n                ></input>\n\n                <button onClick={handleOnClick} type=\"button\">\n                    {actionType} Note\n                </button>\n            </div>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>id</th>\n                        <th>Description</th>\n                        <th>User</th>\n                        <th>Actions</th>\n                    </tr>\n                    {notes.map(note => (\n                        <tr key={note._id}>\n                            <td width=\"35%\">{note._id}</td>\n                            <td width=\"50%\">{note.description}</td>\n                            <td width=\"10%\"></td>\n                            <td width=\"5%\">\n                                <button\n                                    onClick={() => {\n                                        dispatch(setActionType(\"Edit\"));\n                                        dispatch(setId(note._id));\n                                        dispatch(setNewNote(note.description));\n                                    }}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    onClick={() => {\n                                        dispatch(setId(note._id));\n                                        dispatch(deleteNote(note._id));\n                                    }}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst mapStatetoProps = state => ({\n    username: state.userReducer.username,\n    notes: state.notesReducer.notes,\n    actionType: state.notesReducer.actionType,\n    _id: state.notesReducer._id,\n    newNote: state.notesReducer.newNote,\n    isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(mapStatetoProps)(Note);\n"]},"metadata":{},"sourceType":"module"}