{"ast":null,"code":"var _jsxFileName = \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNotes, addNote, setNewNote } from \"../redux/actions/notesActions\";\n\nconst Note = ({\n  dispatch,\n  notes,\n  newNote\n}) => {\n  React.useEffect(() => {\n    dispatch(getNotes());\n  }, [state.notesReducer.notes]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Make a new note!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    onChange: e => dispatch(setNewNote(e.target.value)),\n    name: \"description\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => dispatch(addNote(newNote)),\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"ADD\")), notes.map((note, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, note.description))));\n};\n\nconst mapStatetoProps = state => ({\n  notes: state.notesReducer.notes,\n  newNote: state.notesReducer.newNote\n});\n\nexport default connect(mapStatetoProps)(Note);","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/components/Note.js"],"names":["React","useState","connect","getNotes","addNote","setNewNote","Note","dispatch","notes","newNote","useEffect","state","notesReducer","e","target","value","map","note","i","description","mapStatetoProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA8C,+BAA9C;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAG3CT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAClBH,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AACH,GAFD,EAEG,CAACQ,KAAK,CAACC,YAAN,CAAmBJ,KAApB,CAFH;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AACI,IAAA,QAAQ,EAAEK,CAAC,IAAIN,QAAQ,CAACF,UAAU,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CAD3B;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EASI;AACI,IAAA,OAAO,EAAE,MAAMR,QAAQ,CAACH,OAAO,CAACK,OAAD,CAAR,CAD3B;AAEI,IAAA,IAAI,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,CADJ,EAkBKD,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACP;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,WAAT,CADJ,CADH,CAlBL,CADJ;AA0BH,CAjCD;;AAmCA,MAAMC,eAAe,GAAGT,KAAK,KAAK;AAC9BH,EAAAA,KAAK,EAAEG,KAAK,CAACC,YAAN,CAAmBJ,KADI;AAE9BC,EAAAA,OAAO,EAAEE,KAAK,CAACC,YAAN,CAAmBH;AAFE,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACkB,eAAD,CAAP,CAAyBd,IAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNotes, addNote, setNewNote } from \"../redux/actions/notesActions\";\n\nconst Note = ({ dispatch, notes, newNote }) => {\n\n   \n    React.useEffect(() => {\n        dispatch(getNotes());\n    }, [state.notesReducer.notes]);\n\n    return (\n        <div>\n            <div>\n                <h1>Make a new note!</h1>\n                <p>Description</p>\n                <input\n                    onChange={e => dispatch(setNewNote(e.target.value))}\n                    name=\"description\"\n                    type=\"text\"\n                ></input>\n\n                <button\n                    onClick={() => dispatch(addNote(newNote))}\n                    type=\"button\"\n                >\n                    ADD\n                </button>\n            </div>\n\n            {notes.map((note, i) => (\n                <div key={i}>\n                    <p>{note.description}</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nconst mapStatetoProps = state => ({\n    notes: state.notesReducer.notes,\n    newNote: state.notesReducer.newNote\n});\n\nexport default connect(mapStatetoProps)(Note);\n"]},"metadata":{},"sourceType":"module"}