{"ast":null,"code":"import _defineProperty from \"/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  notes: [{\n    description: \"hello I am first note\"\n  }],\n  loading: false\n};\n\nconst notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_NOTES':\n      return _objectSpread({}, state, {\n        notes: action.notes\n      });\n\n    case 'ADD_NOTE':\n      return _objectSpread({}, state, {\n        notes: [action.note, ...state.notes]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default notesReducer;","map":{"version":3,"sources":["/home/angelo/Desktop/internetappanddesign/hw3-stephcurry3/src/redux/reducers/notesReducer.js"],"names":["initialState","notes","description","loading","notesReducer","state","action","type","note"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,CAAC;AAACC,IAAAA,WAAW,EAAC;AAAb,GAAD,CADW;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAiC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,+BACOF,KADP;AAEIJ,QAAAA,KAAK,EAACK,MAAM,CAACL;AAFjB;;AAIJ,SAAK,UAAL;AACI,+BACOI,KADP;AAEIJ,QAAAA,KAAK,EAAC,CAACK,MAAM,CAACE,IAAR,EAAa,GAAGH,KAAK,CAACJ,KAAtB;AAFV;;AAIJ;AACI,aAAOI,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,YAAf","sourcesContent":["const initialState = {\n    notes:[{description:\"hello I am first note\"}],\n    loading: false\n}\n\nconst notesReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case 'GET_NOTES':\n            return {\n                ...state,\n                notes:action.notes\n            }\n        case 'ADD_NOTE':\n            return{\n                ...state,\n                notes:[action.note,...state.notes]\n            }\n        default:\n            return state\n        }   \n}\n\nexport default notesReducer;"]},"metadata":{},"sourceType":"module"}